//--------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//--------------------------------------------------------------------------------------------------

namespace Processor
{
    [global::System.CodeDom.Compiler.GeneratedCode("AutomaticInterface", "")]
    public partial interface IModelProcessor
    {
        /// <inheritdoc cref="Processor.ModelProcessor.Template" />
        global::Models.IModel<T> Template { get; }
        
        /// <inheritdoc cref="Processor.ModelProcessor.Process{T1, T2}(IModel{T1})" />
        global::Models.IModel<global::System.Collections.Generic.List<T2>> Process<T1, T2>(global::Models.IModel<T1> model) where T1 : global::Models.IModel<global::System.Collections.Generic.List<T2>>;
        
        /// <inheritdoc cref="Processor.ModelProcessor.ModelChanged" />
        event EventHandler<global::Models.IModel<T>> ModelChanged;
        
    }
}


//--------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//--------------------------------------------------------------------------------------------------

namespace Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("AutomaticInterface", "")]
    public partial interface IModel<T>
    {
    }
}
